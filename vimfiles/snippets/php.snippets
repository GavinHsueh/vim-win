snippet php
	<?php

	${1}

	?>
snippet echo
	echo "${1:string}";${2}
snippet meta
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />${1}
snippet include
	include '${1:file}';${2}
snippet include1
	include_once '${1:file}';${2}
snippet require
	require '${1:file}';${2}
snippet require1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet COOKIE
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet FILES
	$_FILES['${1:variable}']${2}
snippet GET
	$_GET['${1:variable}']${2}
snippet POST
	$_POST['${1:variable}']${2}
snippet REQUEST
	$_REQUEST['${1:variable}']${2}
snippet SERVER
	$_SERVER['${1:variable}']${2}
snippet SESSION
	$_SESSION['${1:variable}']${2}
snippet this
	$this->${1}
snippet smarty
	$smarty->${1}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument}){		
		${6}
		}
	}
# define(...)
snippet define
	define('${1}', ${2});${3}
# defined(...)
snippet defined
	${1}defined('${2}')${3}
snippet while
	while (${1:/* condition */}) {
		${2}
	}
# do ... while
snippet do
	do {
		${2}
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2}
	}
snippet ifelse
	if (${1:/* condition */}) {
		${2}
	} else {
		${3}
	}
	${4}
snippet else
	else {
		${1}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3}
			break;
		
		default:
		
			break;
	}
snippet case
	case '${1:value}':
		${2}
		break;
	
snippet for
	for ($${1:i} = ${2:0}; $$1 < ${3:count}; $$1${4:++}) {
		${5}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3}){	
		${4}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet assign
	assign('${1}', ${2});${3}

# TP框架:
snippet M
	$${1:m}=M("${2}");${3}
snippet add
	$${1:m}->add(${2:$data});${3}
snippet delete
	$${1:m}->where('${2}')->delete();${3}
snippet save
	$${1:m}->where('${2}')->save(${3:$data});${4}
snippet select
	$${1:m}->where('${2}')->select();${3}
